{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/blog.js","webpack:///./src/components/subscribe.js"],"names":["_assertThisInitialized","self","ReferenceError","BlogList","Slider","React","useState","position","setPosition","text","type","step","max","min","value","onChange","e","target","BlogPage","data","title","className","id","key","allMdx","totalCount","nodes","map","frontmatter","fields","to","slug","SubscribeForm","props","submitForm","bind","state","status","render","this","onSubmit","action","process","FORMSPREE_API_KEY_SUBSCRIBE","method","name","aria-describedby","placeholder","required","role","ev","preventDefault","form","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","Component"],"mappings":"4FAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EALT,mC,kCCAA,gKAsCaE,EAAQ,aAsBRC,EAAS,WAAO,IAAD,EACMC,IAAMC,SAAS,KAAxCC,EADmB,KACTC,EADS,KAEtBC,EAAO,KAQX,MAPiB,MAAbF,EACFE,EAAO,KACe,MAAbF,EACTE,EAAO,KACe,MAAbF,IACTE,EAAO,MAGP,6BACE,4BAAKA,GAAW,IAChB,2BACEC,KAAK,QACLC,KAAK,IACLC,IAAI,IACJC,IAAI,IACJC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOH,YAK7BI,UA5EE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,6BAASC,UAAU,OAAOC,GAAG,OAC3B,yBAAKD,UAAU,aACb,yBAAKA,UAAU,SACb,wDACA,wBAAIE,IAAKJ,EAAKK,OAAOC,YAAaN,EAAKK,OAAOC,WAA9C,WAEF,6BACGN,EAAKK,OAAOE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQP,EAAxB,EAAwBA,GAAxB,OACrB,oCACE,kBAAC,OAAD,CAAMQ,GAAID,EAAOE,KAAMR,IAAKM,EAAOE,MACjC,yBAAKV,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QAAQE,IAAKD,GACzBM,EAAYR,eAQ3B,kBAAC,IAAD,W,qHC9BaY,E,YACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,MAAQ,CACXC,OAAQ,IAJO,E,4CAQnBC,OAAA,WAAU,IACAD,EAAWE,KAAKH,MAAhBC,OAER,OACE,6BAAShB,UAAU,iBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACZ,IACD,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,kEACA,kGAGA,0BACEmB,SAAUD,KAAKL,WACfO,OAAM,wBAA0BC,GAAYC,4BAC5CC,OAAO,OACPtB,GAAG,aAEH,yBAAKD,UAAU,mBAEb,2BACEX,KAAK,OACLmC,KAAK,YACLxB,UAAU,eACVC,GAAG,gBACHwB,mBAAiB,YACjBC,YAAY,kBACZC,UAAQ,KAIZ,yBAAK3B,UAAU,mBAEb,2BACEX,KAAK,QACLmC,KAAK,QACLxB,UAAU,eACVC,GAAG,iBACHwB,mBAAiB,YACjBC,YAAY,qBACZC,UAAQ,KAIA,YAAXX,EACC,yBAAKhB,UAAU,sBAAsB4B,KAAK,SAA1C,0DAIA,4BAAQ5B,UAAU,wBAAlB,aAIU,UAAXgB,GACC,yBAAKhB,UAAU,0BAA0B4B,KAAK,SAA9C,mEAMJ,uBAAG5B,UAAU,cAAb,iD,EAkBhBa,WAAA,SAAWgB,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMC,EAAOF,EAAGjC,OACVE,EAAO,IAAIkC,SAASD,GACpBE,EAAM,IAAIC,eAChBD,EAAIE,KAAKJ,EAAKR,OAAQQ,EAAKX,QAC3Ba,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIjB,QACNe,EAAKS,QACL,EAAKC,SAAS,CAAEzB,OAAQ,aAExB,EAAKyB,SAAS,CAAEzB,OAAQ,YAG5BiB,EAAIS,KAAK5C,I,GA1G8B6C","file":"component---src-pages-blog-js-1829466196c7b5a4c270.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport SEO from \"../components/seo\"\nimport SubscribeForm from \"../components/subscribe\"\n\nconst BlogPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Blog\" />\n    <section className=\"blog\" id=\"top\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>Blog | My digital garden</h1>\n          <h4 key={data.allMdx.totalCount}>{data.allMdx.totalCount} Posts</h4>\n        </div>\n        <div>\n          {data.allMdx.nodes.map(({ frontmatter, fields, id }) => (\n            <>\n              <Link to={fields.slug} key={fields.slug}>\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div className=\"col-8\" key={id}>\n                      {frontmatter.title}\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </>\n          ))}\n        </div>\n        <SubscribeForm />\n      </div>\n    </section>\n  </Layout>\n)\n\nexport const BlogList = graphql`\n  query blogListQuery {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        id\n        excerpt\n        frontmatter {\n          title\n          date(formatString: \"YYYY\")\n        }\n      }\n      totalCount\n    }\n  }\n`\n\nexport const Slider = () => {\n  const [position, setPosition] = React.useState(\"1\")\n  let text = null\n  if (position === \"0\") {\n    text = \"üëà\"\n  } else if (position === \"1\") {\n    text = \"üëç\"\n  } else if (position === \"2\") {\n    text = \"üëâ\"\n  }\n  return (\n    <div>\n      <h4>{text}</h4>{\" \"}\n      <input\n        type=\"range\"\n        step=\"1\"\n        max=\"2\"\n        min=\"0\"\n        value={position}\n        onChange={e => setPosition(e.target.value)}\n      />\n    </div>\n  )\n}\nexport default BlogPage\n","import React, { Component } from \"react\"\n\nexport default class SubscribeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.submitForm = this.submitForm.bind(this)\n    this.state = {\n      status: \"\",\n    }\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <section className=\"subscribeform\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            {\" \"}\n            <div className=\"col-lg-6 col-md-6 col-s-12\">\n              <div className=\"card shadow-sm\">\n                <div className=\"card-body\">\n                  <h2>Enterprenuer content in your inbox</h2>\n                  <p>\n                    If you like what I talk about and want more you can subscribe here.\n                  </p>\n                  <form\n                    onSubmit={this.submitForm}\n                    action={`https://formspree.io/${process.env.FORMSPREE_API_KEY_SUBSCRIBE}`} // \"https://formspree.io/\" // {\"https://formspree.io/\" + data.site.siteApiKeys.formSpree}\n                    method=\"POST\"\n                    id=\"contactId\"\n                  >\n                    <div className=\"form-group mt-4\">\n                      {/* <label htmlFor=\"subscribeName\">Your first name</label> */}\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        id=\"subscribeName\"\n                        aria-describedby=\"emailHelp\"\n                        placeholder=\"Your first name\"\n                        required\n                      />\n                    </div>\n\n                    <div className=\"form-group mt-2\">\n                      {/* <label htmlFor=\"subscribeEmail\">Email address</label> */}\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        id=\"subscribeEmail\"\n                        aria-describedby=\"emailHelp\"\n                        placeholder=\"Your email address\"\n                        required\n                      />\n                    </div>\n\n                    {status === \"SUCCESS\" ? (\n                      <div className=\"alert alert-success\" role=\"alert\">\n                        Thank you for your message! I'll get back to you soon.\n                      </div>\n                    ) : (\n                      <button className=\"btn btn-xl shadow-sm\">\n                        Subscribe\n                      </button>\n                    )}\n                    {status === \"ERROR\" && (\n                      <div className=\"alert alert-danger mt-2\" role=\"alert\">\n                        Uh oh! There was an error. Please refresh and we'll try\n                        again.\n                      </div>\n                    )}\n                  </form>\n                  <p className=\"disclaimer\">\n                    Strictly no spam. Unsubscribe anytime.\n                  </p>\n                </div>\n\n                {/* <div className=\"col-lg-4 \">\n                  <div className=\"img-container\">\n                    <img src={contactimg} />\n                  </div>\n                </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n  submitForm(ev) {\n    ev.preventDefault()\n    const form = ev.target\n    const data = new FormData(form)\n    const xhr = new XMLHttpRequest()\n    xhr.open(form.method, form.action)\n    xhr.setRequestHeader(\"Accept\", \"application/json\")\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return\n      if (xhr.status === 200) {\n        form.reset()\n        this.setState({ status: \"SUCCESS\" })\n      } else {\n        this.setState({ status: \"ERROR\" })\n      }\n    }\n    xhr.send(data)\n  }\n}\n"],"sourceRoot":""}